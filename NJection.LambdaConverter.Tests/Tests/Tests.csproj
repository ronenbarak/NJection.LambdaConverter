<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A1ACA519-9C2B-4816-8AEB-4A87A34FC157}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>NJection.LambdaConverter.Tests</RootNamespace>
    <AssemblyName>NJection.LambdaConverter.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ArrayExpressions\ArrayCreationTest.cs" />
    <Compile Include="ArrayExpressions\ArrayIndex.cs" />
    <Compile Include="BaseTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="BinaryOperations\AddExpression.cs" />
    <Compile Include="BinaryOperations\AndExpression.cs" />
    <Compile Include="BinaryOperations\AssignExpression.cs" />
    <Compile Include="BinaryOperations\CoalesceExpression.cs" />
    <Compile Include="BinaryOperations\DivideExpression.cs" />
    <Compile Include="BinaryOperations\EqualityExpression.cs" />
    <Compile Include="BinaryOperations\EqualsExpression.cs" />
    <Compile Include="BinaryOperations\ExclusiveOrExpression.cs" />
    <Compile Include="BinaryOperations\GreaterThanExpression.cs" />
    <Compile Include="BinaryOperations\LessThanExpression.cs" />
    <Compile Include="BinaryOperations\ModuluExpression.cs" />
    <Compile Include="BinaryOperations\MultiplyExpression.cs" />
    <Compile Include="BinaryOperations\OrExpression.cs" />
    <Compile Include="BinaryOperations\PowerExpression.cs" />
    <Compile Include="BinaryOperations\ShiftExpression.cs" />
    <Compile Include="BinaryOperations\SubtractExpression.cs" />
    <Compile Include="ConstructorResolving\ArrayIndexer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\BaseConstructorTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\BinaryExpression.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\CastExpression.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\ConditionalExpression.cs" />
    <Compile Include="ConstructorResolving\DefaultValue.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\DelegateInvocation.cs" />
    <Compile Include="ConstructorResolving\NewArrayCreation.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\NewObjectCreation.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\OutParametersInvocation.cs" />
    <Compile Include="ConstructorResolving\ParameterlessConstructor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\PrimitiveParameters.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ConstructorResolving\UnaryExpression.cs" />
    <Compile Include="ContextExpression\ContextExpression.cs" />
    <Compile Include="DynamicExpression.cs" />
    <Compile Include="Eumerators.cs" />
    <Compile Include="EventExpression.cs" />
    <Compile Include="Exceptions.cs" />
    <Compile Include="ExpressionTrees.cs" />
    <Compile Include="FixedAttribute.cs" />
    <Compile Include="GotoExpression.cs" />
    <Compile Include="Linq.cs" />
    <Compile Include="ListExpressions\ListAccessExpression.cs" />
    <Compile Include="ListExpressions\ListIndexExpression.cs" />
    <Compile Include="ListExpressions\ListInitExpression.cs" />
    <Compile Include="Loops.cs" />
    <Compile Include="MethodInvocation.cs" />
    <Compile Include="NewInstanceCreation.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Reflection.cs" />
    <Compile Include="SwitchExpression.cs" />
    <Compile Include="TypeIsExpression.cs" />
    <Compile Include="UnaryExpression\BitwiseCompletmentExpresion.cs" />
    <Compile Include="UnaryExpression\ConvertExpression.cs" />
    <Compile Include="UnaryExpression\DecrementtExpression.cs" />
    <Compile Include="UnaryExpression\IncrementExpression.cs" />
    <Compile Include="UnaryExpression\NegateExpression.cs" />
    <Compile Include="UnaryExpression\NotExpression.cs" />
    <Compile Include="UnaryExpression\ThrowExpression.cs" />
    <Compile Include="UnaryExpression\TypeAsExpression.cs" />
    <Compile Include="UnaryExpression\UnboxExpression.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\NJection.LambdaConverter\NJection.LambdaConverter.csproj">
      <Project>{C819EE27-47F1-47F6-86E2-F2917525EF79}</Project>
      <Name>NJection.LambdaConverter</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>